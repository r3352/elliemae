[2025-02-08 21:22:33] This is codeql database create database --language=c
[2025-02-08 21:22:33] Log file was started late.
[2025-02-08 21:22:33] [PROGRESS] database create> Initializing database at /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll/database.
[2025-02-08 21:22:33] Running plumbing command: codeql database init --language=c --extractor-options-verbosity=1 --qlconfig-file=/Users/matthewzamat/Documents/BugBounty/08_ICE/newdll/qlconfig.yml --source-root=/Users/matthewzamat/Documents/BugBounty/08_ICE/newdll --allow-missing-source-root=false --allow-already-existing -- /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll/database
[2025-02-08 21:22:33] Calling plumbing command: codeql resolve languages --extractor-options-verbosity=1 --format=betterjson
[2025-02-08 21:22:33] [DETAILS] resolve languages> Scanning for [codeql-extractor.yml] from /opt/homebrew/Caskroom/codeql/2.20.4/codeql/.codeqlmanifest.json
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/go/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/python/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/java/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/html/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/xml/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/properties/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/swift/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/csv/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/actions/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/yaml/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/csharp/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/javascript/codeql-extractor.yml.
[2025-02-08 21:22:33] [DETAILS] resolve languages> Parsing /opt/homebrew/Caskroom/codeql/2.20.4/codeql/ruby/codeql-extractor.yml.
[2025-02-08 21:22:33] Plumbing command codeql resolve languages completed:
                      {
                        "aliases" : {
                          "c" : "cpp",
                          "c++" : "cpp",
                          "c-c++" : "cpp",
                          "c-cpp" : "cpp",
                          "c#" : "csharp",
                          "java-kotlin" : "java",
                          "kotlin" : "java",
                          "javascript-typescript" : "javascript",
                          "typescript" : "javascript"
                        },
                        "extractors" : {
                          "go" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/go",
                              "extractor_options" : {
                                "extract_tests" : {
                                  "title" : "Whether to include Go test files in the CodeQL database.",
                                  "description" : "A value indicating whether Go test files should be included in the CodeQL database. The default is 'false'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "extract_vendor_dirs" : {
                                  "title" : "Whether to include Go vendor directories in the CodeQL database.",
                                  "description" : "A value indicating whether Go vendor directories should be included in the CodeQL database. The default is 'false'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "python" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/python",
                              "extractor_options" : {
                                "logging" : {
                                  "title" : "Options pertaining to logging.",
                                  "description" : "Options pertaining to logging.",
                                  "type" : "object",
                                  "properties" : {
                                    "verbosity" : {
                                      "title" : "Python extractor logging verbosity level.",
                                      "description" : "Controls the level of verbosity of the CodeQL Python extractor.\nThe supported levels are (in order of increasing verbosity):\n\n  - off\n  - errors\n  - warnings\n  - info or progress\n  - debug or progress+\n  - trace or progress++\n  - progress+++\n",
                                      "type" : "string",
                                      "pattern" : "^(off|errors|warnings|(info|progress)|(debug|progress\\+)|(trace|progress\\+\\+)|progress\\+\\+\\+)$"
                                    }
                                  }
                                },
                                "python_executable_name" : {
                                  "title" : "Controls the name of the Python executable used by the Python extractor.",
                                  "description" : "The Python extractor uses platform-dependent heuristics to determine the name of the Python executable to use. Specifying a value for this option overrides the name of the Python executable used by the extractor. Accepted values are py, python and python3. Use this setting with caution, the Python extractor requires Python 3 to run.\n",
                                  "type" : "string",
                                  "pattern" : "^(py|python|python3)$"
                                }
                              }
                            }
                          ],
                          "java" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/java",
                              "extractor_options" : {
                                "exclude" : {
                                  "title" : "A glob excluding files from analysis.",
                                  "description" : "A glob indicating what files to exclude from the analysis.\n",
                                  "type" : "string"
                                },
                                "add_prefer_source" : {
                                  "title" : "Whether to always prefer source files over class files.",
                                  "description" : "A value indicating whether source files should be preferred over class files. If set to 'true', the extraction adds '-Xprefer:source' to the javac command line. If set to 'false', the extraction uses the default javac behavior ('-Xprefer:newer'). The default is 'true'.\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "buildless" : {
                                  "title" : "Whether to use buildless (standalone) extraction (experimental).",
                                  "description" : "A value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "html" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/html"
                            }
                          ],
                          "xml" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/xml"
                            }
                          ],
                          "properties" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/properties"
                            }
                          ],
                          "cpp" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp",
                              "extractor_options" : {
                                "scale_timeouts" : {
                                  "title" : "Value to scale compiler introspection timeouts with",
                                  "description" : "The extractor attempts to determine what compiler the source code being extracted is compiled with. To this end the extractor makes additional calls to the compiler, some of which are expected to return within a certain fixed time (either 10s or 15s). On some systems that are under high load this time might be too short, and can be scaled up using this option.\n",
                                  "type" : "string",
                                  "pattern" : "[0-9]+"
                                },
                                "log_verbosity" : {
                                  "title" : "Verbosity of the extractor logging",
                                  "description" : "Set the verbosity of the extractor logging to 'quiet' (0), 'normal' (1), 'chatty' (2), or 'noisy' (3). The default is 'normal'.\n",
                                  "type" : "string",
                                  "pattern" : "[0-3]"
                                }
                              }
                            }
                          ],
                          "swift" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/swift"
                            }
                          ],
                          "csv" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/csv"
                            }
                          ],
                          "actions" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/actions",
                              "extractor_options" : { }
                            }
                          ],
                          "yaml" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/yaml"
                            }
                          ],
                          "csharp" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/csharp",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'brotli' (the default, to write brotli-compressed TRAP), 'gzip', and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip|brotli)$"
                                    }
                                  }
                                },
                                "buildless" : {
                                  "title" : "DEPRECATED - Whether to use buildless (standalone) extraction.",
                                  "description" : "DEPRECATED: Use `--build-mode none` instead.\nA value indicating, which type of extraction the autobuilder should perform. If 'true', then the standalone extractor will be used, otherwise tracing extraction will be performed. The default is 'false'. Note that buildless extraction will generally yield less accurate analysis results, and should only be used in cases where it is not possible to build the code (for example if it uses inaccessible dependencies).\n",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                },
                                "logging" : {
                                  "title" : "Options pertaining to logging.",
                                  "description" : "Options pertaining to logging.",
                                  "type" : "object",
                                  "properties" : {
                                    "verbosity" : {
                                      "title" : "Extractor logging verbosity level.",
                                      "description" : "Controls the level of verbosity of the extractor. The supported levels are (in order of increasing verbosity):\n  - off\n  - errors\n  - warnings\n  - info or progress\n  - debug or progress+\n  - trace or progress++\n  - progress+++\n",
                                      "type" : "string",
                                      "pattern" : "^(off|errors|warnings|(info|progress)|(debug|progress\\+)|(trace|progress\\+\\+)|progress\\+\\+\\+)$"
                                    }
                                  }
                                },
                                "binlog" : {
                                  "title" : "Binlog",
                                  "description" : "[EXPERIMENTAL] The value is a path to the MsBuild binary log file that should be extracted. This option only works when `--build-mode none` is also specified.\n",
                                  "type" : "array"
                                }
                              }
                            }
                          ],
                          "javascript" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/javascript",
                              "extractor_options" : {
                                "skip_types" : {
                                  "title" : "Skip type extraction for TypeScript",
                                  "description" : "Whether to skip the extraction of types in a TypeScript application",
                                  "type" : "string",
                                  "pattern" : "^(false|true)$"
                                }
                              }
                            }
                          ],
                          "ruby" : [
                            {
                              "extractor_root" : "/opt/homebrew/Caskroom/codeql/2.20.4/codeql/ruby",
                              "extractor_options" : {
                                "trap" : {
                                  "title" : "Options pertaining to TRAP.",
                                  "description" : "Options pertaining to TRAP.",
                                  "type" : "object",
                                  "properties" : {
                                    "compression" : {
                                      "title" : "Controls compression for the TRAP files written by the extractor.",
                                      "description" : "This option is only intended for use in debugging the extractor. Accepted values are 'gzip' (the default, to write gzip-compressed TRAP) and 'none' (to write uncompressed TRAP).\n",
                                      "type" : "string",
                                      "pattern" : "^(none|gzip)$"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
[2025-02-08 21:22:33] [PROGRESS] database init> Calculating baseline information in /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll
[2025-02-08 21:22:33] [SPAMMY] database init> Ignoring the following directories when processing baseline information: .git, .hg, .svn.
[2025-02-08 21:22:33] [DETAILS] database init> Running command in /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll: /opt/homebrew/Caskroom/codeql/2.20.4/codeql/tools/osx64/scc --by-file --exclude-dir .git,.hg,.svn --format json --no-large --no-min .
[2025-02-08 21:22:34] Using configure-baseline script /opt/homebrew/Caskroom/codeql/2.20.4/codeql/javascript/tools/configure-baseline.sh.
[2025-02-08 21:22:34] [PROGRESS] database init> Running command in /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll: [/opt/homebrew/Caskroom/codeql/2.20.4/codeql/javascript/tools/configure-baseline.sh]
[2025-02-08 21:22:34] [SPAMMY] database init> Found 11346 baseline files for csharp.
[2025-02-08 21:22:34] [SPAMMY] database init> Found 1 baseline files for javascript.
[2025-02-08 21:22:34] [PROGRESS] database init> Calculated baseline information for languages: csharp, javascript (929ms).
[2025-02-08 21:22:34] [PROGRESS] database init> Resolving extractor cpp.
[2025-02-08 21:22:34] [DETAILS] database init> Found candidate extractor root for cpp: /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp.
[2025-02-08 21:22:34] [PROGRESS] database init> Successfully loaded extractor C/C++ (cpp) from /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp.
[2025-02-08 21:22:34] [SPAMMY] database init> Determining macOS System Integrity Protection status...
[2025-02-08 21:22:34] [SPAMMY] database init> Running command [/usr/bin/csrutil, status].
[2025-02-08 21:22:34] [SPAMMY] database init> SIP is enabled.
[2025-02-08 21:22:34] [PROGRESS] database init> Created skeleton CodeQL database at /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll/database. This in-progress database is ready to be populated by an extractor.
[2025-02-08 21:22:34] Plumbing command codeql database init completed.
[2025-02-08 21:22:34] Using autobuild script /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh.
[2025-02-08 21:22:34] [DETAILS] database create> Detected autobuild command for C/C++: /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh.
[2025-02-08 21:22:34] [PROGRESS] database create> Running build command: [/opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh]
[2025-02-08 21:22:34] Running plumbing command: codeql database trace-command --working-dir=/Users/matthewzamat/Documents/BugBounty/08_ICE/newdll --index-traceless-dbs --no-db-cluster -- /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll/database /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh
[2025-02-08 21:22:34] [PROGRESS] database trace-command> Running command in /Users/matthewzamat/Documents/BugBounty/08_ICE/newdll: [/opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh]
[2025-02-08 21:22:43] [build-stderr] cpp/autobuilder: Build will be attempted from '.' even though no build system was found there.
[2025-02-08 21:22:44] [build-stdout] ~/Documents/BugBounty/08_ICE/newdll ~/Documents/BugBounty/08_ICE/newdll
[2025-02-08 21:22:44] [build-stdout] ~/Documents/BugBounty/08_ICE/newdll
[2025-02-08 21:22:45] [build-stderr] cpp/autobuilder: No supported build system detected.
[2025-02-08 21:22:45] [build-stderr] cpp/autobuilder: autobuild summary.
[2025-02-08 21:22:45] [ERROR] Spawned process exited abnormally (code 1; tried to run: [/opt/homebrew/Caskroom/codeql/2.20.4/codeql/tools/osx64/preload_tracer, /opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh])
[2025-02-08 21:22:45] Exception caught at top level: Exit status 1 from command: [/opt/homebrew/Caskroom/codeql/2.20.4/codeql/cpp/tools/autobuild.sh]
                      com.semmle.cli2.Commandline.executeAndCheckResult(Commandline.java:170)
                      com.semmle.cli2.Commandline.runWithoutReturn(Commandline.java:123)
                      com.semmle.cli2.database.DatabaseProcessCommandCommon.executeSubcommand(DatabaseProcessCommandCommon.java:227)
                      com.semmle.cli2.database.TraceCommandCommand.executeSubcommand(TraceCommandCommand.java:126)
                      com.semmle.cli2.picocli.SubcommandCommon.lambda$executeSubcommandWithMessages$5(SubcommandCommon.java:892)
                      com.semmle.cli2.picocli.SubcommandCommon.withCompilationMessages(SubcommandCommon.java:444)
                      com.semmle.cli2.picocli.SubcommandCommon.executeSubcommandWithMessages(SubcommandCommon.java:890)
                      com.semmle.cli2.picocli.PlumbingRunner.run(PlumbingRunner.java:119)
                      com.semmle.cli2.picocli.SubcommandCommon.runPlumbingInProcess(SubcommandCommon.java:201)
                      com.semmle.cli2.database.CreateCommand.executeSubcommand(CreateCommand.java:185)
                      com.semmle.cli2.picocli.SubcommandCommon.lambda$executeSubcommandWithMessages$5(SubcommandCommon.java:892)
                      com.semmle.cli2.picocli.SubcommandCommon.withCompilationMessages(SubcommandCommon.java:444)
                      com.semmle.cli2.picocli.SubcommandCommon.executeSubcommandWithMessages(SubcommandCommon.java:890)
                      com.semmle.cli2.picocli.SubcommandCommon.toplevelMain(SubcommandCommon.java:777)
                      com.semmle.cli2.picocli.SubcommandCommon.call(SubcommandCommon.java:757)
                      com.semmle.cli2.picocli.SubcommandMaker.runMain(SubcommandMaker.java:238)
                      com.semmle.cli2.picocli.SubcommandMaker.runMain(SubcommandMaker.java:259)
                      com.semmle.cli2.CodeQL.main(CodeQL.java:115)
